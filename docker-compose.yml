version: "3.8"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ecom-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ecommerce}
      POSTGRES_USER: ${POSTGRES_USER:-ecomuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - ecom-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ecomuser}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Spring Boot Backend
  backend:
    build:
      context: .
      dockerfile: ecom-backend/Dockerfile
    container_name: ecom-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: Ecommerce
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/ecommerce
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-ecomuser}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SERVER_PORT: 5000
      SPRING_PROFILES_ACTIVE: prod
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_JIANQUANWANG_ECOMMERCE: DEBUG
    ports:
      - "5000:5000"
    networks:
      - ecom-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: ecom-frontend/Dockerfile
    container_name: ecom-frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - ecom-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

volumes:
  db_data:
    driver: local

networks:
  ecom-network:
    driver: bridge
